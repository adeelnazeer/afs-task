# You can override the included template(s) by including variable overrides
# SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
# Secret Detection customization: https://docs.gitlab.com/ee/user/application_security/secret_detection/#customizing-settings
# Dependency Scanning customization: https://docs.gitlab.com/ee/user/application_security/dependency_scanning/#customizing-the-dependency-scanning-settings
# Note that environment variables can be set in several places
# See https://docs.gitlab.com/ee/ci/variables/#cicd-variable-precedence
stages:
- build
- docker-build
- deploy
- test
build:
  stage: build
  only:
  - release/develop
  - release/staging
  - release/production
  image: node:14-alpine
  script:
  - echo "Start building App"
  - npm rebuild node-sass
  - CI=false yarn
  - CI=false yarn build
  - echo "Build successfully!"
  artifacts:
    expire_in: 1 hour
    paths:
    - build
    - node_modules/
variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ''
  DOCKER_DRIVER: overlay2
docker-build:
  stage: docker-build
  only:
  - release/develop
  - release/staging
  - release/production
  image: docker
  services:
  - name: docker:18.09-dind
  before_script:
  - echo $CI_BUILD_TOKEN | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
  - docker build --network host --pull -t devtools.agifly.cloud:5050/agifly-website/agifly-website-frontend:develop
    .
  - docker push devtools.agifly.cloud:5050/agifly-website/agifly-website-frontend:develop
deployment:
  stage: deploy
  only:
  - release/develop
  - release/staging
  - release/production
  image: alpine:3.12
  script:
  - apk update && apk add --no-cache curl
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
  - mkdir -p $HOME/.kube
  - echo -n $KUBE_CONFIG | base64 -d > $HOME/.kube/config
  - kubectl config view
  - sed -i "s/__CI_ENVIRONMENT_SLUG__/${CI_ENVIRONMENT_SLUG}/" kubernetes_manifest.yml
  - kubectl apply -f kubernetes_manifest.yml
  - kubectl rollout restart deployment/frontend-develop
  environment:
    name: develop
sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
